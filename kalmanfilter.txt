Design State Covariance (Useful for Kalman)
The other half of the state Gaussian is the covariance matrix  ?? . In the univariate Kalman filter we specified an initial value for  ??2 , and then the filter took care of updating its value 
as measurements were added to the filter. The same thing happens in the multidimensional Kalman filter. We specify an initial value for  ??  and the filter updates it during each epoch.

We need to set the variances to reasonable values. For example, we may choose  ??2??????=500??2  if we are quite uncertain about the initial position. Top speed for a dog is around 21 m/s, 
so in the absence of any other information about the velocity we can set  3????????=21 , or  ??2??????=72=49 .

In the last chapter we showed that the position and velocities are correlated. But how correlated are they for a dog? I have no idea. As we will see the filter computes this for us, 
so I initialize the covariances to zero. Of course, if you know the covariances you should use them.

Recall that the diagonals of the covariance matrix contains the variance of each variable, and the off-diagonal elements contains the covariances. Thus we have:

??=[500 0
    0 49]
 
We can use numpy.diag, which creates a diagonal matrix from the values for the diagonal. Recall from linear algebra that a diagonal matrix is one with zeros in the off-diagonal elements.